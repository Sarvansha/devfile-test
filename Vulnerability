def delete_pods_with_image(cluster_name, namespace, vulnerability_image, excel_data):
    with DynamicClient(api_client) as dyn_client:
        v1_pods = dyn_client.resources.get(api_version='v1', kind='Pod', namespace=namespace)
        pods = v1_pods.get()

        for pod in pods.items:
            for container in pod.spec.containers:
                if vulnerability_image in container.image:
                    # Append data to the excel_data list
                    excel_data.append({
                        "Cluster": cluster_name,
                        "Namespace": namespace,
                        "Pod": pod.metadata.name,
                        "DeploymentConfig": pod.metadata.labels.get("deploymentconfig", "")
                    })

                    # Delete the pod
                    print(f"Deleting pod {pod.metadata.name} in cluster {cluster_name}, namespace {namespace}")
                    dyn_client.resources.get(api_version='v1', kind='Pod', name=pod.metadata.name,
                                             namespace=namespace).delete()

# JFrog Artifactory: Delete vulnerability images
def delete_image_in_jfrog(image_name):
    artifactory = Artifactory(jfrog_url, jfrog_username, jfrog_password)
    artifactory.delete_artifact(jfrog_repo, image_name)

# Replace 'vulnerability_image' with the actual image name you are searching for
vulnerability_image = 'your_vulnerability_image'

# Excel data list to store information
excel_data = []

# Perform actions for each cluster and namespace
for cluster in clusters:
    cluster_name = cluster["name"]
    namespace = cluster["namespace"]

    # Perform actions for the current cluster and namespace
    delete_pods_with_image(cluster_name, namespace, vulnerability_image, excel_data)
    delete_image_in_jfrog(vulnerability_image)

# Create a pandas DataFrame from the excel_data list
df = pd.DataFrame(excel_data)

# Create an Excel file
excel_filename = 'vulnerable_images_info.xlsx'
df.to_excel(excel_filename, index=False)
print(f"Excel file '{excel_filename}' created successfully.")
